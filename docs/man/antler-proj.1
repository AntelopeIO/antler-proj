.\" Automatically generated by Pandoc 2.5
.\"
.TH "aproj" "1" "March 09, 2023" "aproj 1.0.0" "User Manual"
.hy
.SH NAME
.PP
aproj \- Antler Project Management System
.SH SYNOPSIS
.PP
\f[C]aproj <command> [<args>]\f[R]
.SH DESCRIPTION
.PP
\f[B]Antler Project Management System\f[R] is a set of libraries and
tools to help users successfully develop smart contracts.
.SH COMMANDS
.PP
This is a general help text which prints when aproj runs without a
command or with key \[en]help.
.PP
\f[B]Example: aproj \[en]help\f[R]
.PP
Each command has its own help which prints when the command runs with
key \[en]help.
.PP
\f[B]Example: aproj init \[en]help\f[R]
.PP
Below is described a full list of all possible commands and their
possible arguments
.PP
\f[B]init\f[R] command creates a new project.
Creating the directory tree, a \f[C]project.yaml\f[R] file and
initialize it.
.IP
.nf
\f[C]
Command arguments:
    <path>                      Path to the root of the project. Here a \[ga]project.yaml\[ga] file will be created 
    <project_name>              Name of the project
    [version]                   Version of the project. Default version is 0.0.1
    \-h,\-\-help                   Print this help message and exit
    \-p <path>                   Path to the root of the project.
    \-n <project_name>           The name of the project.
    \-v <version>                The version to store in the project file.
\f[R]
.fi
.PP
\f[B]Example: aproj init ./project hello_world 0.1\f[R]
.PP
\f[B]add\f[R] command add an app, dependency, library or test to your
project.
.IP
.nf
\f[C]
Command arguments:  
  \-h,\-\-help                   Print this help message and exit
  \-p <path>                   This must be the path to the \[ga]project.yml\[ga] or the path containing it.
  [path]                      Path to the root of the project.
  <app,lib,dep>               Type of an entity to work with 
\f[R]
.fi
.PP
\f[B]Example: aproj add ./project app\f[R]
.PP
\f[B]update\f[R] command updates an app, dependency, library or test to
your project.
.IP
.nf
\f[C]
Command arguments:  
  \-h,\-\-help                   Print this help message and exit
  \-p <path>                   This must be the path to the \[ga]project.yml\[ga] or the path containing it.
  [path]                      Path to the root of the project.
  <app,lib,dep>               Type of an entity to work with 
\f[R]
.fi
.PP
\f[B]Example: aproj update ./project app\f[R]
.PP
\f[B]remove\f[R] command remove an app, dependency, library or test to
your project.
.IP
.nf
\f[C]
Command arguments:  
  \-h,\-\-help                   Print this help message and exit
  \-p <path>                   This must be the path to the \[ga]project.yml\[ga] or the path containing it.
  [path]                      Path to the root of the project.
  <app,lib,dep>               Type of an entity to work with 
\f[R]
.fi
.PP
\f[B]Example: aproj remove ./project app\f[R]
.PP
\f[B]populate\f[R] command Load existing information about the project
starting from the root project.yaml file as it described in chapter
\f[C]\[dq]Loading of a project\[dq]\f[R] in the User\[cq]s guide.
.IP
.nf
\f[C]
Without additional keys it pass through a subtree of each application and check all non local dependencies for updates. 
Downloads all the updates in a way depending on where it is located.
\f[R]
.fi
.IP
.nf
\f[C]
Command arguments:
    \-h,\-\-help                   Print this help message and exit
    \-p <path>                   This must be the path to the \[ga]project.yml\[ga] or the path containing it.
    [path]                      Path to the root of the project.    
\f[R]
.fi
.PP
\f[B]Example: aproj populate ./project\f[R]
.PP
\f[B]validate\f[R] command performs a check of the project to ensure
that all data that describes the project is correct.
.IP
.nf
\f[C]
Check all project.yaml files described in the project for updates.
Download the updated project.yaml files.
Do all checks of the project as described in the user\[aq]s guide.
Checks if it is possible to access all dependencies. I.e. if all described local directories of all local dependencies
exist and if it is possible to download all remote dependencies.
\f[R]
.fi
.IP
.nf
\f[C]
Command arguments:
    \-h,\-\-help                   Print this help message and exit
    \-p <path>                   Path to the root of the project.
    \-V,\-\-verbose                Verbose output.
\f[R]
.fi
.PP
\f[B]Example: aproj validate ./project\f[R]
.PP
\f[B]build\f[R] command do building of all applications described in the
project.yaml, their dependencies and tests.
.IP
.nf
\f[C]
Command arguments:
    \-h,\-\-help                   Print this help message and exit
    \-p <path>                   This must be the path to the \[ga]project.yml\[ga] or the path containing it.
    [path]                      Path to the root of the project.    
\f[R]
.fi
.PP
\f[B]Example: aproj build ./project\f[R]
.PP
\f[B]version\f[R] Returns the version of antler\-proj application
\f[B]Example: aproj version\f[R]
.SH EXAMPLES
.SH AUTHORS
.SH BUGS
.PP
Please submit bug reports online at:
<https://github.com/AntelopeIO/antler-proj/issues>
.SH SEE ALSO
.PP
Full documentation and sources at:
<https://github.com/AntelopeIO/antler-proj>
