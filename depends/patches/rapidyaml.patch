diff -r --unified ryml-original/CMakeLists.txt ryml-src/CMakeLists.txt
index d18407c..5c2f75c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,6 +6,9 @@ project(ryml
     LANGUAGES CXX)
 include(./compat.cmake)

+set_property(GLOBAL PROPERTY CXX_STANDARD "20")
+set(CXX_STANDARD "20")
+
 c4_project(VERSION 0.5.0 STANDALONE
     AUTHOR "Joao Paulo Magalhaes <dev@jpmag.me>")

@@ -59,6 +61,7 @@ c4_add_library(ryml
     LIBS c4core
     INCORPORATE c4core
     )
+set_property(TARGET ryml PROPERTY CXX_STANDARD 20)

 if(RYML_WITH_TAB_TOKENS)
     target_compile_definitions(ryml PUBLIC RYML_WITH_TAB_TOKENS)
diff -r --unified ryml-original/ext/c4core/src/c4/substr.hpp ryml-src/ext/c4core/src/c4/substr.hpp
--- ryml-original/ext/c4core/src/c4/substr.hpp	2022-12-07 09:15:04.479783880 -0600
+++ ryml-src/ext/c4core/src/c4/substr.hpp	2022-12-07 09:12:02.768022161 -0600
@@ -3,6 +3,7 @@

 /** @file substr.hpp read+write string views */

+#include <string_view>
 #include <string.h>
 #include <ctype.h>
 #include <type_traits>
@@ -102,6 +103,9 @@
     /// convert automatically to substring of const C
     operator ro_substr () const { ro_substr s(str, len); return s; }

+
+    operator const std::string_view () const { return std::string_view(str,len); }
+
     /** @} */

 public:
diff --git a/src/c4/std/string.hpp b/src/c4/std/string.hpp
index 7c08df0..3ea9cd4 100644
--- a/ext/c4core/src/c4/std/string.hpp
+++ b/ext/c4core/src/c4/std/string.hpp
@@ -8,6 +8,7 @@
 #endif

 #include <string>
+#include <string_view>

 namespace c4 {

@@ -27,6 +28,13 @@ inline c4::csubstr to_csubstr(std::string const& s)
     return c4::csubstr(data, s.size());
 }

+/** get a readonly view to an existing std::string_view */
+inline c4::csubstr to_csubstr(std::string_view const s)
+{
+    const char* data = ! s.empty() ? &s[0] : nullptr;
+    return c4::csubstr(data, s.size());
+}
+
 //-----------------------------------------------------------------------------

 C4_ALWAYS_INLINE bool operator== (c4::csubstr ss, std::string const& s) { return ss.compare(to_csubstr(s)) == 0; }
